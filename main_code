import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation
from matplotlib import colors

t=0
dt=0.01

#initialization random
data = np.random.rand(10,10)
data=data.round()

#initialization
#data=np.zeros((10,10))
#data[3:5,4:6]=1
#data[5,5]=1

#create discrete colormap
cmap = colors.ListedColormap(['white','black'])
bounds = [0,1]
norm = colors.BoundaryNorm(bounds, cmap.N)

fig = plt.figure()
ax = fig.add_axes([0, 0, 1, 1], frameon=False)
ax.set_xlim(0, 10), ax.set_xticks([])
ax.set_ylim(0, 10), ax.set_yticks([])
ax.grid(which='major', axis='both', linestyle='-', color='k', linewidth=0.5)
ax.set_xticks(np.arange(0.5, 10, 1));
ax.set_yticks(np.arange(0.5, 10, 1));
ax.imshow(data, cmap=cmap)

def update():
    for i in range(len(data)):
        for j in range(len(data)):
            if data[i,j]==1:
                if sum(data[i-1:i+1,j-1:j+1])==2 or sum(data[i-1:j+1])==3:
                    data[i,j]=1
                else:
                    data[i,j]=0
            else:
                if sum(data[i-1:j+1,j-1:j+1])==3:
                    data[i,j]=1
                else:
                    data[i,j]=0
                    
    
                    
animation = animation.FuncAnimation(fig, update, interval=10)
plt.show()
